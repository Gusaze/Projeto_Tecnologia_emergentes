#include <SPI.h>
#include <MFRC522.h>
#include <SoftwareSerial.h>
#include <TinyGPS++.h>

// RFID
#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN);

// GPS
#define GPS_RX 4
#define GPS_TX 3
SoftwareSerial gpsSerial(GPS_RX, GPS_TX);
TinyGPSPlus gps;

// Relé
#define RELAY_PIN 7

// LEDs
#define LED_VERDE 6
#define LED_VERMELHO 8

// UID autorizado
byte authorizedUID[] = {0xDE, 0xAD, 0xBE, 0xEF}; // Substitua pelo UID do seu cartão

void setup() {
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();

  gpsSerial.begin(9600);

  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, LOW);

  pinMode(LED_VERDE, OUTPUT);
  pinMode(LED_VERMELHO, OUTPUT);
  digitalWrite(LED_VERDE, LOW);
  digitalWrite(LED_VERMELHO, LOW);

  Serial.println("Sistema iniciado. Aproxime o cartão...");
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  Serial.print("Cartão lido UID: ");
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    Serial.print(mfrc522.uid.uidByte[i], HEX);
    Serial.print(" ");
  }
  Serial.println();

  if (isAuthorized(mfrc522.uid.uidByte, mfrc522.uid.size)) {
    Serial.println("Cartão autorizado!");
    digitalWrite(LED_VERDE, HIGH);
    digitalWrite(RELAY_PIN, HIGH);

    String location = getGPSLocation();
    Serial.println("Localização: " + location);

    delay(5000); // Simula carro ligado
    digitalWrite(RELAY_PIN, LOW);
    digitalWrite(LED_VERDE, LOW);
  } else {
    Serial.println("Cartão NÃO autorizado!");
    digitalWrite(LED_VERMELHO, HIGH);
    delay(3000);
    digitalWrite(LED_VERMELHO, LOW);
  }

  mfrc522.PICC_HaltA(); // Para a leitura
}

bool isAuthorized(byte *uid, byte uidSize) {
  if (uidSize != sizeof(authorizedUID)) return false;
  for (byte i = 0; i < uidSize; i++) {
    if (uid[i] != authorizedUID[i]) return false;
  }
  return true;
}

String getGPSLocation() {
  unsigned long start = millis();
  while (millis() - start < 5000) { // tenta por 5 segundos
    while (gpsSerial.available() > 0) {
      if (gps.encode(gpsSerial.read()) && gps.location.isValid()) {
        String lat = String(gps.location.lat(), 6);
        String lon = String(gps.location.lng(), 6);
        return lat + "," + lon;
      }
    }
  }
  return "0.000000,0.000000"; // retorno padrão se não encontrar
}
